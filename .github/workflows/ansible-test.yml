name: CI
on:
  # Run CI against all pushes (direct commits, also merged PRs), Pull Requests
  push:
    branches: [main, release-*]
  pull_request:
    branches: [main, release-*]
env:
  NAMESPACE: stolostron
  COLLECTION_NAME: incubator

jobs:
  ###
  # Sanity tests (REQUIRED)
  #
  # https://docs.ansible.com/ansible/latest/dev_guide/testing_sanity.html

  sanity:
    name: Sanity (Ⓐ${{ matrix.ansible }})
    strategy:
      matrix:
        ansible:
          # It's important that Sanity is tested against all stable-X.Y branches
          # Testing against `devel` may fail as new tests are added.
          # - stable-2.9 # Only if your collection supports Ansible 2.9
          - stable-2.10
          - stable-2.11
          - stable-2.12
          # - devel
    runs-on: ubuntu-latest
    steps:
      - name: Perform sanity testing with ansible-test
        uses: ansible-community/ansible-test-gh-action@release/v1
        with:
          ansible-core-version: ${{ matrix.ansible }}
          testing-type: sanity
          test-deps: >-
            amazon.aws

  units:
    runs-on: ubuntu-latest
    name: Units (Ⓐ${{ matrix.ansible }})
    strategy:
      # As soon as the first unit test fails, cancel the others to free up the CI queue
      fail-fast: true
      matrix:
        ansible:
          - stable-2.10
          #          - stable-2.11
          - stable-2.12
          # - devel
        python-version:
          - 3.6
          #          - 3.7
          #          - 3.8
          - 3.9

    steps:
      - name: Check out code
        uses: actions/checkout@v2
        with:
          path: ansible_collections/${{env.NAMESPACE}}/${{env.COLLECTION_NAME}}

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          # it is just required to run that once as "ansible-test units" in the docker image
          # will run on all python versions it supports.
          python-version: 3.8

      - name: Install ansible-base (${{ matrix.ansible }})
        run: pip install https://github.com/ansible/ansible/archive/${{ matrix.ansible }}.tar.gz --disable-pip-version-check

      # OPTIONAL If your unit test requires Python libraries from other collections
      # Install them like this
      - name: Install collection dependencies
        run: ansible-galaxy collection install ansible.netcommon ansible.utils -p .

      # Run the unit tests
      - name: Run unit test (${{ matrix.python-version }})
        run: ansible-test units -v --color --docker --coverage --python ${{ matrix.python-version }}
        working-directory: ./ansible_collections/${{env.NAMESPACE}}/${{env.COLLECTION_NAME}}

      # disable coverage for now as we don't have any unit tests
      # ansible-test support producing code coverage date
      # - name: Generate coverage report
      #   run: ansible-test coverage xml -v --requirements --group-by command --group-by version
      #   working-directory: ./ansible_collections/${{env.NAMESPACE}}/${{env.COLLECTION_NAME}}

      # # See the reports at https://codecov.io/gh/GITHUBORG/REPONAME
      # - uses: codecov/codecov-action@v2
      #   with:
      #     fail_ci_if_error: false
